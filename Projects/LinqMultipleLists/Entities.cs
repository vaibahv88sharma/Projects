//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;



public partial class EntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
	
	#region Extensibility Method Definitions
	partial void OnCreated();
	#endregion
	
	public EntitiesDataContext(string requestUrl) : 
			base(requestUrl) {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Documents")]
	public Microsoft.SharePoint.Linq.EntityList<Document> Documents {
		get {
			return this.GetList<Document>("Documents");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Employees")]
	public Microsoft.SharePoint.Linq.EntityList<EmployeesItem> Employees {
		get {
			return this.GetList<EmployeesItem>("Employees");
		}
	}
	
	/// <summary>
	/// This library contains administrator-approved form templates that were activated to this site collection.
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Form Templates")]
	public Microsoft.SharePoint.Linq.EntityList<Item> FormTemplates {
		get {
			return this.GetList<Item>("Form Templates");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Location")]
	public Microsoft.SharePoint.Linq.EntityList<LocationItem> Location {
		get {
			return this.GetList<LocationItem>("Location");
		}
	}
	
	/// <summary>
	/// MySite MicroFeed Persistent Storage List
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="MicroFeed")]
	public Microsoft.SharePoint.Linq.EntityList<Item> MicroFeed {
		get {
			return this.GetList<Item>("MicroFeed");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Projects")]
	public Microsoft.SharePoint.Linq.EntityList<ProjectsItem> Projects {
		get {
			return this.GetList<ProjectsItem>("Projects");
		}
	}
	
	/// <summary>
	/// Use this library to store files which are included on pages within this site, such as images on Wiki pages.
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Assets")]
	public Microsoft.SharePoint.Linq.EntityList<Document> SiteAssets {
		get {
			return this.GetList<Document>("Site Assets");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Pages")]
	public Microsoft.SharePoint.Linq.EntityList<WikiPage> SitePages {
		get {
			return this.GetList<WikiPage>("Site Pages");
		}
	}
	
	/// <summary>
	/// Use the style library to store style sheets, such as CSS or XSL files. The style sheets in this gallery can be used by this site or any of its subsites.
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Style Library")]
	public Microsoft.SharePoint.Linq.EntityList<Document> StyleLibrary {
		get {
			return this.GetList<Document>("Style Library");
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EmployeesItem))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(LocationItem))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MicroFeedBase))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MicroFeedPost))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(MicroFeedReply))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ProjectsItem))]
public partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
	
	private System.Nullable<int> _id;
	
	private System.Nullable<int> _version;
	
	private string _path;
	
	private Microsoft.SharePoint.Linq.EntityState _entityState;
	
	private System.Collections.Generic.IDictionary<string, object> _originalValues;
	
	private string _title;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion

	Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
		get {
			return this._entityState;
		}
		set {
			if ((value != this._entityState)) {
				this._entityState = value;
			}
		}
	}

	System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
		get {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			return this._originalValues;
		}
	}
	
	public Item() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
	public System.Nullable<int> Id {
		get {
			return this._id;
		}
		set {
			if ((value != this._id)) {
				this.OnPropertyChanging("Id", this._id);
				this._id = value;
				this.OnPropertyChanged("Id");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
	public System.Nullable<int> Version {
		get {
			return this._version;
		}
		set {
			if ((value != this._version)) {
				this.OnPropertyChanging("Version", this._version);
				this._version = value;
				this.OnPropertyChanged("Version");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
	public string Path {
		get {
			return this._path;
		}
		set {
			if ((value != this._path)) {
				this.OnPropertyChanging("Path", this._path);
				this._path = value;
				this.OnPropertyChanged("Path");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
	public virtual string Title {
		get {
			return this._title;
		}
		set {
			if ((value != this._title)) {
				this.OnPropertyChanging("Title", this._title);
				this._title = value;
				this.OnPropertyChanged("Title");
			}
		}
	}
	
	public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
	
	public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
	
	protected virtual void OnPropertyChanged(string propertyName) {
		if ((null != this.PropertyChanged)) {
			this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
		}
	}
	
	protected virtual void OnPropertyChanging(string propertyName, object value) {
		if ((null == this._originalValues)) {
			this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
		}
		if ((false == this._originalValues.ContainsKey(propertyName))) {
			this._originalValues.Add(propertyName, value);
		}
		if ((null != this.PropertyChanging)) {
			this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
		}
	}
}

/// <summary>
/// Create a new document.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WikiPage))]
public partial class Document : Item {
	
	private string _name;
	
	private string _documentModifiedBy;
	
	private string _documentCreatedBy;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public Document() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
	public string Name {
		get {
			return this._name;
		}
		set {
			if ((value != this._name)) {
				this.OnPropertyChanging("Name", this._name);
				this._name = value;
				this.OnPropertyChanged("Name");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
	public string DocumentModifiedBy {
		get {
			return this._documentModifiedBy;
		}
		set {
			if ((value != this._documentModifiedBy)) {
				this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
				this._documentModifiedBy = value;
				this.OnPropertyChanged("DocumentModifiedBy");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
	public string DocumentCreatedBy {
		get {
			return this._documentCreatedBy;
		}
		set {
			if ((value != this._documentCreatedBy)) {
				this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
				this._documentCreatedBy = value;
				this.OnPropertyChanged("DocumentCreatedBy");
			}
		}
	}
}

/// <summary>
/// Create a new wiki page.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wiki Page", Id="0x010108")]
public partial class WikiPage : Document {
	
	private string _wikiContent;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public WikiPage() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WikiField", Storage="_wikiContent", FieldType="Note")]
	public string WikiContent {
		get {
			return this._wikiContent;
		}
		set {
			if ((value != this._wikiContent)) {
				this.OnPropertyChanging("WikiContent", this._wikiContent);
				this._wikiContent = value;
				this.OnPropertyChanged("WikiContent");
			}
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string Title {
		get {
			throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
		}
		set {
			throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Employees")]
public partial class EmployeesItem : Item {
	
	private System.Nullable<double> _employeeID;
	
	private Microsoft.SharePoint.Linq.EntityRef<LocationItem> _currentLocation;
	
	private Microsoft.SharePoint.Linq.EntitySet<ProjectsItem> _projectsItem;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public EmployeesItem() {
		this._currentLocation = new Microsoft.SharePoint.Linq.EntityRef<LocationItem>();
		this._currentLocation.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LocationItem>>(this.OnCurrentLocationSync);
		this._currentLocation.OnChanged += new System.EventHandler(this.OnCurrentLocationChanged);
		this._currentLocation.OnChanging += new System.EventHandler(this.OnCurrentLocationChanging);
		this._projectsItem = new Microsoft.SharePoint.Linq.EntitySet<ProjectsItem>();
		this._projectsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ProjectsItem>>(this.OnProjectsItemSync);
		this._projectsItem.OnChanged += new System.EventHandler(this.OnProjectsItemChanged);
		this._projectsItem.OnChanging += new System.EventHandler(this.OnProjectsItemChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmployeeID", Storage="_employeeID", FieldType="Number")]
	public System.Nullable<double> EmployeeID {
		get {
			return this._employeeID;
		}
		set {
			if ((value != this._employeeID)) {
				this.OnPropertyChanging("EmployeeID", this._employeeID);
				this._employeeID = value;
				this.OnPropertyChanged("EmployeeID");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CurrentLocation", Storage="_currentLocation", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Location")]
	public LocationItem CurrentLocation {
		get {
			return this._currentLocation.GetEntity();
		}
		set {
			this._currentLocation.SetEntity(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="EmployeeInProject", Storage="_projectsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Projects")]
	public Microsoft.SharePoint.Linq.EntitySet<ProjectsItem> ProjectsItem {
		get {
			return this._projectsItem;
		}
		set {
			this._projectsItem.Assign(value);
		}
	}
	
	private void OnCurrentLocationChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("CurrentLocation", this._currentLocation.Clone());
	}
	
	private void OnCurrentLocationChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("CurrentLocation");
	}
	
	private void OnCurrentLocationSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LocationItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.EmployeesItem.Add(this);
		}
		else {
			e.Item.EmployeesItem.Remove(this);
		}
	}
	
	private void OnProjectsItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("ProjectsItem", this._projectsItem.Clone());
	}
	
	private void OnProjectsItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("ProjectsItem");
	}
	
	private void OnProjectsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ProjectsItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.EmployeeInProject = this;
		}
		else {
			e.Item.EmployeeInProject = null;
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Location")]
public partial class LocationItem : Item {
	
	private string _province;
	
	private Microsoft.SharePoint.Linq.EntitySet<EmployeesItem> _employeesItem;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public LocationItem() {
		this._employeesItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesItem>();
		this._employeesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesItem>>(this.OnEmployeesItemSync);
		this._employeesItem.OnChanged += new System.EventHandler(this.OnEmployeesItemChanged);
		this._employeesItem.OnChanging += new System.EventHandler(this.OnEmployeesItemChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Province", Storage="_province", FieldType="Text")]
	public string Province {
		get {
			return this._province;
		}
		set {
			if ((value != this._province)) {
				this.OnPropertyChanging("Province", this._province);
				this._province = value;
				this.OnPropertyChanged("Province");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CurrentLocation", Storage="_employeesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees")]
	public Microsoft.SharePoint.Linq.EntitySet<EmployeesItem> EmployeesItem {
		get {
			return this._employeesItem;
		}
		set {
			this._employeesItem.Assign(value);
		}
	}
	
	private void OnEmployeesItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("EmployeesItem", this._employeesItem.Clone());
	}
	
	private void OnEmployeesItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("EmployeesItem");
	}
	
	private void OnEmployeesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.CurrentLocation = this;
		}
		else {
			e.Item.CurrentLocation = null;
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Projects")]
public partial class ProjectsItem : Item {
	
	private Microsoft.SharePoint.Linq.EntityRef<EmployeesItem> _employeeInProject;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public ProjectsItem() {
		this._employeeInProject = new Microsoft.SharePoint.Linq.EntityRef<EmployeesItem>();
		this._employeeInProject.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesItem>>(this.OnEmployeeInProjectSync);
		this._employeeInProject.OnChanged += new System.EventHandler(this.OnEmployeeInProjectChanged);
		this._employeeInProject.OnChanging += new System.EventHandler(this.OnEmployeeInProjectChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="EmployeeInProject", Storage="_employeeInProject", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employees")]
	public EmployeesItem EmployeeInProject {
		get {
			return this._employeeInProject.GetEntity();
		}
		set {
			this._employeeInProject.SetEntity(value);
		}
	}
	
	private void OnEmployeeInProjectChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("EmployeeInProject", this._employeeInProject.Clone());
	}
	
	private void OnEmployeeInProjectChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("EmployeeInProject");
	}
	
	private void OnEmployeeInProjectSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.ProjectsItem.Add(this);
		}
		else {
			e.Item.ProjectsItem.Remove(this);
		}
	}
}

/// <summary>
/// For internal use only
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Base", Id="0x01", List="MicroFeed")]
public partial class MicroFeedBase : Item {
	
	private System.Nullable<int> _microBlogType;
	
	private string _postAuthor;
	
	private System.Nullable<int> _definitionId;
	
	private System.Nullable<int> _rootPostID;
	
	private string _rootPostUniqueID;
	
	private System.Nullable<int> _attributes;
	
	private string _content;
	
	private string _contentData;
	
	private string _searchContent;
	
	private string _postSource;
	
	private System.Nullable<int> _peopleCount;
	
	private string _peopleList;
	
	private string _postSourceUri;
	
	private System.Nullable<int> _mediaLinkType;
	
	private string _mediaLinkDescription;
	
	private string _mediaLinkURI;
	
	private string _mediaLinkUISnippet;
	
	private string _mediaLinkContentURI;
	
	private System.Nullable<int> _mediaLength;
	
	private System.Nullable<int> _mediaWidth;
	
	private System.Nullable<int> _mediaHeight;
	
	private string _mediaActionClickUrl;
	
	private System.Nullable<int> _mediaActionClickKind;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public MicroFeedBase() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MicroBlogType", Storage="_microBlogType", FieldType="Integer")]
	public System.Nullable<int> MicroBlogType {
		get {
			return this._microBlogType;
		}
		set {
			if ((value != this._microBlogType)) {
				this.OnPropertyChanging("MicroBlogType", this._microBlogType);
				this._microBlogType = value;
				this.OnPropertyChanged("MicroBlogType");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PostAuthor", Storage="_postAuthor", FieldType="Text")]
	public string PostAuthor {
		get {
			return this._postAuthor;
		}
		set {
			if ((value != this._postAuthor)) {
				this.OnPropertyChanging("PostAuthor", this._postAuthor);
				this._postAuthor = value;
				this.OnPropertyChanged("PostAuthor");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DefinitionId", Storage="_definitionId", FieldType="Integer")]
	public System.Nullable<int> DefinitionId {
		get {
			return this._definitionId;
		}
		set {
			if ((value != this._definitionId)) {
				this.OnPropertyChanging("DefinitionId", this._definitionId);
				this._definitionId = value;
				this.OnPropertyChanged("DefinitionId");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RootPostID", Storage="_rootPostID", FieldType="Integer")]
	public System.Nullable<int> RootPostID {
		get {
			return this._rootPostID;
		}
		set {
			if ((value != this._rootPostID)) {
				this.OnPropertyChanging("RootPostID", this._rootPostID);
				this._rootPostID = value;
				this.OnPropertyChanged("RootPostID");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RootPostUniqueID", Storage="_rootPostUniqueID", FieldType="Text")]
	public string RootPostUniqueID {
		get {
			return this._rootPostUniqueID;
		}
		set {
			if ((value != this._rootPostUniqueID)) {
				this.OnPropertyChanging("RootPostUniqueID", this._rootPostUniqueID);
				this._rootPostUniqueID = value;
				this.OnPropertyChanged("RootPostUniqueID");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Attributes", Storage="_attributes", FieldType="Integer")]
	public System.Nullable<int> Attributes {
		get {
			return this._attributes;
		}
		set {
			if ((value != this._attributes)) {
				this.OnPropertyChanging("Attributes", this._attributes);
				this._attributes = value;
				this.OnPropertyChanged("Attributes");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Content", Storage="_content", FieldType="Note")]
	public string Content {
		get {
			return this._content;
		}
		set {
			if ((value != this._content)) {
				this.OnPropertyChanging("Content", this._content);
				this._content = value;
				this.OnPropertyChanged("Content");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContentData", Storage="_contentData", FieldType="Note")]
	public string ContentData {
		get {
			return this._contentData;
		}
		set {
			if ((value != this._contentData)) {
				this.OnPropertyChanging("ContentData", this._contentData);
				this._contentData = value;
				this.OnPropertyChanged("ContentData");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SearchContent", Storage="_searchContent", FieldType="Note")]
	public string SearchContent {
		get {
			return this._searchContent;
		}
		set {
			if ((value != this._searchContent)) {
				this.OnPropertyChanging("SearchContent", this._searchContent);
				this._searchContent = value;
				this.OnPropertyChanged("SearchContent");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PostSource", Storage="_postSource", FieldType="Text")]
	public string PostSource {
		get {
			return this._postSource;
		}
		set {
			if ((value != this._postSource)) {
				this.OnPropertyChanging("PostSource", this._postSource);
				this._postSource = value;
				this.OnPropertyChanged("PostSource");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PeopleCount", Storage="_peopleCount", FieldType="Integer")]
	public System.Nullable<int> PeopleCount {
		get {
			return this._peopleCount;
		}
		set {
			if ((value != this._peopleCount)) {
				this.OnPropertyChanging("PeopleCount", this._peopleCount);
				this._peopleCount = value;
				this.OnPropertyChanged("PeopleCount");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PeopleList", Storage="_peopleList", FieldType="Note")]
	public string PeopleList {
		get {
			return this._peopleList;
		}
		set {
			if ((value != this._peopleList)) {
				this.OnPropertyChanging("PeopleList", this._peopleList);
				this._peopleList = value;
				this.OnPropertyChanged("PeopleList");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PostSourceUri", Storage="_postSourceUri", FieldType="Note")]
	public string PostSourceUri {
		get {
			return this._postSourceUri;
		}
		set {
			if ((value != this._postSourceUri)) {
				this.OnPropertyChanging("PostSourceUri", this._postSourceUri);
				this._postSourceUri = value;
				this.OnPropertyChanged("PostSourceUri");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLinkType", Storage="_mediaLinkType", FieldType="Integer")]
	public System.Nullable<int> MediaLinkType {
		get {
			return this._mediaLinkType;
		}
		set {
			if ((value != this._mediaLinkType)) {
				this.OnPropertyChanging("MediaLinkType", this._mediaLinkType);
				this._mediaLinkType = value;
				this.OnPropertyChanged("MediaLinkType");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLinkDescription", Storage="_mediaLinkDescription", FieldType="Text")]
	public string MediaLinkDescription {
		get {
			return this._mediaLinkDescription;
		}
		set {
			if ((value != this._mediaLinkDescription)) {
				this.OnPropertyChanging("MediaLinkDescription", this._mediaLinkDescription);
				this._mediaLinkDescription = value;
				this.OnPropertyChanged("MediaLinkDescription");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLinkURI", Storage="_mediaLinkURI", FieldType="Url")]
	public string MediaLinkURI {
		get {
			return this._mediaLinkURI;
		}
		set {
			if ((value != this._mediaLinkURI)) {
				this.OnPropertyChanging("MediaLinkURI", this._mediaLinkURI);
				this._mediaLinkURI = value;
				this.OnPropertyChanged("MediaLinkURI");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLinkUISnippet", Storage="_mediaLinkUISnippet", FieldType="Url")]
	public string MediaLinkUISnippet {
		get {
			return this._mediaLinkUISnippet;
		}
		set {
			if ((value != this._mediaLinkUISnippet)) {
				this.OnPropertyChanging("MediaLinkUISnippet", this._mediaLinkUISnippet);
				this._mediaLinkUISnippet = value;
				this.OnPropertyChanged("MediaLinkUISnippet");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLinkContentURI", Storage="_mediaLinkContentURI", FieldType="Url")]
	public string MediaLinkContentURI {
		get {
			return this._mediaLinkContentURI;
		}
		set {
			if ((value != this._mediaLinkContentURI)) {
				this.OnPropertyChanging("MediaLinkContentURI", this._mediaLinkContentURI);
				this._mediaLinkContentURI = value;
				this.OnPropertyChanged("MediaLinkContentURI");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLength", Storage="_mediaLength", FieldType="Integer")]
	public System.Nullable<int> MediaLength {
		get {
			return this._mediaLength;
		}
		set {
			if ((value != this._mediaLength)) {
				this.OnPropertyChanging("MediaLength", this._mediaLength);
				this._mediaLength = value;
				this.OnPropertyChanged("MediaLength");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaWidth", Storage="_mediaWidth", FieldType="Integer")]
	public System.Nullable<int> MediaWidth {
		get {
			return this._mediaWidth;
		}
		set {
			if ((value != this._mediaWidth)) {
				this.OnPropertyChanging("MediaWidth", this._mediaWidth);
				this._mediaWidth = value;
				this.OnPropertyChanged("MediaWidth");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaHeight", Storage="_mediaHeight", FieldType="Integer")]
	public System.Nullable<int> MediaHeight {
		get {
			return this._mediaHeight;
		}
		set {
			if ((value != this._mediaHeight)) {
				this.OnPropertyChanging("MediaHeight", this._mediaHeight);
				this._mediaHeight = value;
				this.OnPropertyChanged("MediaHeight");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaActionClickUrl", Storage="_mediaActionClickUrl", FieldType="Url")]
	public string MediaActionClickUrl {
		get {
			return this._mediaActionClickUrl;
		}
		set {
			if ((value != this._mediaActionClickUrl)) {
				this.OnPropertyChanging("MediaActionClickUrl", this._mediaActionClickUrl);
				this._mediaActionClickUrl = value;
				this.OnPropertyChanged("MediaActionClickUrl");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaActionClickKind", Storage="_mediaActionClickKind", FieldType="Integer")]
	public System.Nullable<int> MediaActionClickKind {
		get {
			return this._mediaActionClickKind;
		}
		set {
			if ((value != this._mediaActionClickKind)) {
				this.OnPropertyChanging("MediaActionClickKind", this._mediaActionClickKind);
				this._mediaActionClickKind = value;
				this.OnPropertyChanged("MediaActionClickKind");
			}
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string Title {
		get {
			throw new System.InvalidOperationException("Field Title was removed from content type Base.");
		}
		set {
			throw new System.InvalidOperationException("Field Title was removed from content type Base.");
		}
	}
}

/// <summary>
/// For internal use only
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Post", Id="0x01", List="MicroFeed")]
public partial class MicroFeedPost : Item {
	
	private System.Nullable<int> _replyCount;
	
	private string _refRoot;
	
	private string _refReply;
	
	private string _eMailSubscribers;
	
	private string _eMailUnsubscribed;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public MicroFeedPost() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyCount", Storage="_replyCount", FieldType="Integer")]
	public System.Nullable<int> ReplyCount {
		get {
			return this._replyCount;
		}
		set {
			if ((value != this._replyCount)) {
				this.OnPropertyChanging("ReplyCount", this._replyCount);
				this._replyCount = value;
				this.OnPropertyChanged("ReplyCount");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RefRoot", Storage="_refRoot", FieldType="Note")]
	public string RefRoot {
		get {
			return this._refRoot;
		}
		set {
			if ((value != this._refRoot)) {
				this.OnPropertyChanging("RefRoot", this._refRoot);
				this._refRoot = value;
				this.OnPropertyChanged("RefRoot");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RefReply", Storage="_refReply", FieldType="Note")]
	public string RefReply {
		get {
			return this._refReply;
		}
		set {
			if ((value != this._refReply)) {
				this.OnPropertyChanging("RefReply", this._refReply);
				this._refReply = value;
				this.OnPropertyChanged("RefReply");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="eMailSubscribers", Storage="_eMailSubscribers", FieldType="Note")]
	public string EMailSubscribers {
		get {
			return this._eMailSubscribers;
		}
		set {
			if ((value != this._eMailSubscribers)) {
				this.OnPropertyChanging("EMailSubscribers", this._eMailSubscribers);
				this._eMailSubscribers = value;
				this.OnPropertyChanged("EMailSubscribers");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="eMailUnsubscribed", Storage="_eMailUnsubscribed", FieldType="Note")]
	public string EMailUnsubscribed {
		get {
			return this._eMailUnsubscribed;
		}
		set {
			if ((value != this._eMailUnsubscribed)) {
				this.OnPropertyChanging("EMailUnsubscribed", this._eMailUnsubscribed);
				this._eMailUnsubscribed = value;
				this.OnPropertyChanged("EMailUnsubscribed");
			}
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string Title {
		get {
			throw new System.InvalidOperationException("Field Title was removed from content type Post.");
		}
		set {
			throw new System.InvalidOperationException("Field Title was removed from content type Post.");
		}
	}
}

/// <summary>
/// For internal use only
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Reply", Id="0x01", List="MicroFeed")]
public partial class MicroFeedReply : Item {
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public MicroFeedReply() {
		this.OnCreated();
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string Title {
		get {
			throw new System.InvalidOperationException("Field Title was removed from content type Reply.");
		}
		set {
			throw new System.InvalidOperationException("Field Title was removed from content type Reply.");
		}
	}
}
